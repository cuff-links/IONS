<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="EmployeeParameterDS.DefaultValues" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdUZWxlcmlrLlJlcG9ydGluZywgVmVyc2lvbj02LjEuMTIuNjEx
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWE5ZDc5ODNkZmNjMjYxYmUMAwAAAKYBVGVs
        ZXJpay5SZXBvcnRpbmcsIFZlcnNpb249Ni4xLjEyLjYxMSwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
        ZXlUb2tlbj1hOWQ3OTgzZGZjYzI2MWJlXV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
        cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUBAAAAMlRlbGVyaWsuUmVw
        b3J0aW5nLlNxbERhdGFTb3VyY2VQYXJhbWV0ZXJDb2xsZWN0aW9uAQAAABJDb2xsZWN0aW9uYDEraXRl
        bXMES1N5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbVGVsZXJpay5SZXBvcnRpbmcuU3Fs
        RGF0YVNvdXJjZVBhcmFtZXRlcgMAAAACAAAACQQAAAAFBAAAAEtTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
        ZXJpYy5MaXN0YDFbW1RlbGVyaWsuUmVwb3J0aW5nLlNxbERhdGFTb3VyY2VQYXJhbWV0ZXIDAAAABl9p
        dGVtcwVfc2l6ZQhfdmVyc2lvbgQAACpUZWxlcmlrLlJlcG9ydGluZy5TcWxEYXRhU291cmNlUGFyYW1l
        dGVyW10CAAAACAgDAAAACQUAAAAAAAAACAAAAAcFAAAAAAEAAAAAAAAABChUZWxlcmlrLlJlcG9ydGlu
        Zy5TcWxEYXRhU291cmNlUGFyYW1ldGVyAgAAAAs=
</value>
  </metadata>
  <data name="EmployeeParameterDS.SelectCommand" xml:space="preserve">
    <value>SELECT EmployeeID , e.LastName + ', ' + e.FirstName as 'Name', u.userName as 'Username'
FROM EMPLOYEE e INNER JOIN 
aspnet_Users u on u.userName = e.userID INNER JOIN aspnet_UsersInRoles ur
on u.userID = ur.UserID INNER JOIN aspnet_Roles r on r.RoleID = ur.RoleID
WHERE r.RoleName = 'Sales' </value>
  </data>
  <metadata name="SalesReportQueryDS.DefaultValues" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdUZWxlcmlrLlJlcG9ydGluZywgVmVyc2lvbj02LjEuMTIuNjEx
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWE5ZDc5ODNkZmNjMjYxYmUMAwAAAKYBVGVs
        ZXJpay5SZXBvcnRpbmcsIFZlcnNpb249Ni4xLjEyLjYxMSwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
        ZXlUb2tlbj1hOWQ3OTgzZGZjYzI2MWJlXV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
        cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUBAAAAMlRlbGVyaWsuUmVw
        b3J0aW5nLlNxbERhdGFTb3VyY2VQYXJhbWV0ZXJDb2xsZWN0aW9uAQAAABJDb2xsZWN0aW9uYDEraXRl
        bXMES1N5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbVGVsZXJpay5SZXBvcnRpbmcuU3Fs
        RGF0YVNvdXJjZVBhcmFtZXRlcgMAAAACAAAACQQAAAAFBAAAAEtTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
        ZXJpYy5MaXN0YDFbW1RlbGVyaWsuUmVwb3J0aW5nLlNxbERhdGFTb3VyY2VQYXJhbWV0ZXIDAAAABl9p
        dGVtcwVfc2l6ZQhfdmVyc2lvbgQAACpUZWxlcmlrLlJlcG9ydGluZy5TcWxEYXRhU291cmNlUGFyYW1l
        dGVyW10CAAAACAgDAAAACQUAAAADAAAAIAAAAAcFAAAAAAEAAAAEAAAABChUZWxlcmlrLlJlcG9ydGlu
        Zy5TcWxEYXRhU291cmNlUGFyYW1ldGVyAgAAAAkGAAAACQcAAAAJCAAAAAoMCQAAAE5TeXN0ZW0uRGF0
        YSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
        MTkzNGUwODkMCgAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
        aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQYAAAAoVGVsZXJpay5SZXBvcnRpbmcuU3FsRGF0YVNv
        dXJjZVBhcmFtZXRlcgQAAAAGZGJUeXBlGERhdGFTb3VyY2VQYXJhbWV0ZXIrbmFtZRlEYXRhU291cmNl
        UGFyYW1ldGVyK3ZhbHVlI0RhdGFTb3VyY2VQYXJhbWV0ZXIrUHJvcGVydHlDaGFuZ2VkBAECBBJTeXN0
        ZW0uRGF0YS5EYlR5cGUJAAAAMVN5c3RlbS5Db21wb25lbnRNb2RlbC5Qcm9wZXJ0eUNoYW5nZWRFdmVu
        dEhhbmRsZXIKAAAAAgAAAAX1////ElN5c3RlbS5EYXRhLkRiVHlwZQEAAAAHdmFsdWVfXwAICQAAABAA
        AAAGDAAAAApAQmVnaW5EYXRlBg0AAAAKMDUvMDEvMjAxMAoBBwAAAAYAAAAB8v////X///8QAAAABg8A
        AAAIQEVuZERhdGUGEAAAAAowNi8wMS8yMDEzCgEIAAAABgAAAAHv////9f///xAAAAAGEgAAAAhAU2Fs
        ZXNJRAYTAAAABnNhbGVzMQoL
</value>
  </metadata>
  <data name="SalesReportQueryDS.SelectCommand" xml:space="preserve">
    <value>SELECT e.FirstName + ' ' + e.LastName as 'Salesperson Name', e.EmployeeID as
'Sales ID' , o.Client#, o.Order#, c.FirstName + ' '+ c.LastName as 'Client Name',
c.Address, c.ContactNumber as 'Contact#', c.DateEst as 'Established',
CASE p.Category WHEN 'TV' THEN 'Television' WHEN 'LD' THEN 'Long Distance' ELSE Category END as 'Category',
p.Name , p.Price from  CLIENT c INNER JOIN EMPLOYEE e on c.SalesID = e.EmployeeID
INNER JOIN ORDERS o on c.Client# = o.Client# INNER JOIN ORDEREDPRODUCT op on 
op.Order# = o.Order# INNER JOIN Product p on op.ProductID = p.ProductID 
WHERE o.Order# LIKE 'N%' AND c.DateEst BETWEEN @BeginDate AND @EndDate
AND e.EmployeeID = @SalesID</value>
  </data>
  <data name="textBox1.Value" xml:space="preserve">
    <value>Client#</value>
  </data>
  <data name="textBox2.Value" xml:space="preserve">
    <value>Order#</value>
  </data>
  <data name="textBox3.Value" xml:space="preserve">
    <value>Client Name</value>
  </data>
  <data name="addressCaptionTextBox.Value" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="textBox4.Value" xml:space="preserve">
    <value>Contact#</value>
  </data>
  <data name="establishedCaptionTextBox.Value" xml:space="preserve">
    <value>Established</value>
  </data>
  <data name="categoryCaptionTextBox.Value" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="nameCaptionTextBox.Value" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="priceCaptionTextBox.Value" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="textBox6.Value" xml:space="preserve">
    <value>=Fields.[Client#]</value>
  </data>
  <data name="textBox7.Value" xml:space="preserve">
    <value>Total for Order:</value>
  </data>
  <data name="nameCountFunctionTextBox.Value" xml:space="preserve">
    <value>=Count(Fields.Name)</value>
  </data>
  <data name="priceSumFunctionTextBox.Value" xml:space="preserve">
    <value>=Sum(Fields.Price)</value>
  </data>
  <data name="textBox8.Value" xml:space="preserve">
    <value>Products Sold:</value>
  </data>
  <data name="textBox5.Value" xml:space="preserve">
    <value>Grand total:</value>
  </data>
  <data name="nameCountFunctionTextBox1.Value" xml:space="preserve">
    <value>=Count(Fields.Name)</value>
  </data>
  <data name="priceSumFunctionTextBox1.Value" xml:space="preserve">
    <value>=Sum(Fields.Price)</value>
  </data>
  <data name="textBox11.Value" xml:space="preserve">
    <value>Products Sold:</value>
  </data>
  <data name="currentTimeTextBox.Value" xml:space="preserve">
    <value>=NOW()</value>
  </data>
  <data name="pageInfoTextBox.Value" xml:space="preserve">
    <value>=PageNumber</value>
  </data>
  <data name="titleTextBox.Value" xml:space="preserve">
    <value>Plumbob Communications Sales Report</value>
  </data>
  <data name="textBox14.Value" xml:space="preserve">
    <value>Salesperson Name:</value>
  </data>
  <data name="textBox15.Value" xml:space="preserve">
    <value>=Fields.[Salesperson Name]</value>
  </data>
  <data name="textBox16.Value" xml:space="preserve">
    <value>Sales ID:</value>
  </data>
  <data name="textBox17.Value" xml:space="preserve">
    <value>=Fields.[Sales ID]</value>
  </data>
  <data name="textBox9.Value" xml:space="preserve">
    <value>Displaying sales from </value>
  </data>
  <data name="textBox10.Value" xml:space="preserve">
    <value>= Parameters.Begin.Value</value>
  </data>
  <data name="textBox12.Value" xml:space="preserve">
    <value>through</value>
  </data>
  <data name="textBox13.Value" xml:space="preserve">
    <value>= Parameters.End.Value</value>
  </data>
  <data name="textBox18.Value" xml:space="preserve">
    <value>=Fields.[Order#]</value>
  </data>
  <data name="textBox19.Value" xml:space="preserve">
    <value>=Fields.[Client Name]</value>
  </data>
  <data name="textBox20.Value" xml:space="preserve">
    <value>=Fields.[Contact#]</value>
  </data>
  <data name="establishedDataTextBox.Value" xml:space="preserve">
    <value>=Fields.Established</value>
  </data>
  <data name="categoryDataTextBox.Value" xml:space="preserve">
    <value>=Fields.Category</value>
  </data>
  <data name="nameDataTextBox.Value" xml:space="preserve">
    <value>=Fields.Name</value>
  </data>
  <data name="priceDataTextBox.Value" xml:space="preserve">
    <value>=Fields.Price</value>
  </data>
  <data name="addressDataTextBox.Value" xml:space="preserve">
    <value>=Fields.Address</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=6.1.12.611, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
    <value>0.1in</value>
  </metadata>
</root>